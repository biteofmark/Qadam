import { useEffect, useState, useCallback, useRef } from 'react';
import { useToast } from '@/hooks/use-toast';
import AdvancedScreenshotProtection from '@/lib/advanced-screenshot-protection';

interface ScreenshotProtectionProps {
  children: React.ReactNode;
  enabled?: boolean;
  showWarnings?: boolean;
}

export default function ScreenshotProtection({ 
  children, 
  enabled = true, 
  showWarnings = true 
}: ScreenshotProtectionProps) {
  const { toast } = useToast();
  const [isBlurred, setIsBlurred] = useState(false);
  const [watermarkText, setWatermarkText] = useState('');
  const alertShown = useRef(false);
  const lastActivity = useRef(Date.now());
  const intervalRef = useRef<NodeJS.Timeout>();
  const advancedProtection = useRef<AdvancedScreenshotProtection>();

  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π watermark —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
  useEffect(() => {
    if (!enabled) return;
    
    const user = localStorage.getItem('username') || '–ê–Ω–æ–Ω–∏–º–Ω—ã–π';
    const timestamp = new Date().toLocaleString('ru-RU');
    const sessionId = Math.random().toString(36).substring(2, 8);
    setWatermarkText(`${user} ‚Ä¢ ${timestamp} ‚Ä¢ ID: ${sessionId}`);

    // Initialize advanced protection
    advancedProtection.current = new AdvancedScreenshotProtection({
      onScreenshotAttempt: () => {
        setIsBlurred(true);
        toast({
          title: "–ù–∞—Ä—É—à–µ–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
          description: "–ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞",
          variant: "destructive",
          duration: 5000,
        });
        setTimeout(() => setIsBlurred(false), 3000);
      },
      onSuspiciousActivity: (activity) => {
        console.warn('–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:', activity);
        toast({
          title: "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ",
          description: `–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${activity}`,
          variant: "destructive",
        });
      }
    });

    // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∑–∞—â–∏—Ç—É
    advancedProtection.current.activate();

    return () => {
      if (advancedProtection.current) {
        advancedProtection.current.destroy();
      }
    };
  }, [enabled, toast]);

  // –î–µ—Ç–µ–∫—Ü–∏—è –ø–æ–ø—ã—Ç–æ–∫ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ —á–µ—Ä–µ–∑ –∫–ª–∞–≤–∏—à–∏
  const handleKeyDown = useCallback((e: KeyboardEvent) => {
    if (!enabled) return;

    // Print Screen –∏ –µ–≥–æ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏
    if (e.key === 'PrintScreen' || 
        (e.ctrlKey && e.key === 'p') ||
        (e.ctrlKey && e.shiftKey && e.key === 'S') ||
        (e.metaKey && e.shiftKey && (e.key === '3' || e.key === '4' || e.key === '5'))) {
      
      e.preventDefault();
      e.stopPropagation();
      
      if (showWarnings && !alertShown.current) {
        toast({
          title: "‚ö†Ô∏è –°–∫—Ä–∏–Ω—à–æ—Ç—ã –∑–∞–ø—Ä–µ—â–µ–Ω—ã",
          description: "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–æ",
          variant: "destructive",
          duration: 5000,
        });
        alertShown.current = true;
        setTimeout(() => { alertShown.current = false; }, 3000);
      }
      
      // –í—Ä–µ–º–µ–Ω–Ω–æ —Ä–∞–∑–º—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
      setIsBlurred(true);
      setTimeout(() => setIsBlurred(false), 2000);
      
      return false;
    }

    // F12, Ctrl+Shift+I (DevTools)
    if (e.key === 'F12' || 
        (e.ctrlKey && e.shiftKey && e.key === 'I') ||
        (e.ctrlKey && e.shiftKey && e.key === 'C') ||
        (e.ctrlKey && e.key === 'u')) {
      e.preventDefault();
      
      if (showWarnings) {
        toast({
          title: "üîí –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã",
          description: "–î–æ—Å—Ç—É–ø –∫ DevTools –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
          variant: "destructive",
        });
      }
      return false;
    }

    lastActivity.current = Date.now();
  }, [enabled, showWarnings, toast]);

  // –î–µ—Ç–µ–∫—Ü–∏—è –ø–æ—Ç–µ—Ä–∏ —Ñ–æ–∫—É—Å–∞ (–ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π)
  const handleVisibilityChange = useCallback(() => {
    if (!enabled) return;
    
    if (document.hidden) {
      setIsBlurred(true);
      if (showWarnings) {
        toast({
          title: "üëÄ –í–Ω–∏–º–∞–Ω–∏–µ!",
          description: "–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏",
          variant: "destructive",
        });
      }
    } else {
      // –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Å–Ω—è—Ç–∏–µ–º —Ä–∞–∑–º—ã—Ç–∏—è
      setTimeout(() => setIsBlurred(false), 1000);
    }
  }, [enabled, showWarnings, toast]);

  // –î–µ—Ç–µ–∫—Ü–∏—è –ø–æ—Ç–µ—Ä–∏ —Ñ–æ–∫—É—Å–∞ –æ–∫–Ω–∞
  const handleWindowBlur = useCallback(() => {
    if (!enabled) return;
    setIsBlurred(true);
  }, [enabled]);

  const handleWindowFocus = useCallback(() => {
    if (!enabled) return;
    setTimeout(() => setIsBlurred(false), 500);
  }, [enabled]);

  // –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø—Ä–∞–≤–æ–π –∫–Ω–æ–ø–∫–∏ –º—ã—à–∏
  const handleContextMenu = useCallback((e: MouseEvent) => {
    if (!enabled) return;
    e.preventDefault();
    if (showWarnings) {
      toast({
        title: "üö´ –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ",
        description: "–ü—Ä–∞–≤–∞—è –∫–Ω–æ–ø–∫–∞ –º—ã—à–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
        variant: "destructive",
      });
    }
    return false;
  }, [enabled, showWarnings, toast]);

  // –î–µ—Ç–µ–∫—Ü–∏—è –∏–Ω–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (–≤–æ–∑–º–æ–∂–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤)
  useEffect(() => {
    if (!enabled) return;

    intervalRef.current = setInterval(() => {
      const now = Date.now();
      const inactive = now - lastActivity.current;
      
      // –ï—Å–ª–∏ –±–æ–ª–µ–µ 30 —Å–µ–∫—É–Ω–¥ –±–µ–∑–¥–µ–π—Å—Ç–≤–∏—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
      if (inactive > 30000 && showWarnings) {
        setIsBlurred(true);
        toast({
          title: "‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ–µ –±–µ–∑–¥–µ–π—Å—Ç–≤–∏–µ",
          description: "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å. –ù–∞–∂–º–∏—Ç–µ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è",
          variant: "destructive",
        });
      }
    }, 10000);

    return () => {
      if (intervalRef.current) {
        clearInterval(intervalRef.current);
      }
    };
  }, [enabled, showWarnings, toast]);

  // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
  useEffect(() => {
    if (!enabled) return;

    document.addEventListener('keydown', handleKeyDown, true);
    document.addEventListener('contextmenu', handleContextMenu, true);
    document.addEventListener('visibilitychange', handleVisibilityChange);
    window.addEventListener('blur', handleWindowBlur);
    window.addEventListener('focus', handleWindowFocus);

    // –ë–ª–æ–∫–∏—Ä—É–µ–º drag & drop
    const handleDragStart = (e: DragEvent) => e.preventDefault();
    document.addEventListener('dragstart', handleDragStart);

    // –ë–ª–æ–∫–∏—Ä—É–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–∏ —Ç—Ä–æ–π–Ω–æ–º –∫–ª–∏–∫–µ
    const handleSelectStart = (e: Event) => e.preventDefault();
    document.addEventListener('selectstart', handleSelectStart);

    return () => {
      document.removeEventListener('keydown', handleKeyDown, true);
      document.removeEventListener('contextmenu', handleContextMenu, true);
      document.removeEventListener('visibilitychange', handleVisibilityChange);
      window.removeEventListener('blur', handleWindowBlur);
      window.removeEventListener('focus', handleWindowFocus);
      document.removeEventListener('dragstart', handleDragStart);
      document.removeEventListener('selectstart', handleSelectStart);
    };
  }, [enabled, handleKeyDown, handleContextMenu, handleVisibilityChange, handleWindowBlur, handleWindowFocus]);

  if (!enabled) {
    return <>{children}</>;
  }

  return (
    <div className="relative min-h-screen">
      {/* –í–æ–¥—è–Ω–æ–π –∑–Ω–∞–∫ */}
      <div className="fixed inset-0 pointer-events-none z-50 select-none">
        <div className="absolute inset-0 opacity-10">
          {Array.from({ length: 20 }, (_, i) => (
            <div
              key={i}
              className="absolute text-gray-500 text-sm font-mono transform -rotate-45 select-none"
              style={{
                left: `${(i % 4) * 25 + 10}%`,
                top: `${Math.floor(i / 4) * 20 + 10}%`,
              }}
            >
              {watermarkText}
            </div>
          ))}
        </div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å –∑–∞—â–∏—Ç–æ–π */}
      <div 
        className={`
          no-select no-drag content-protected
          ${isBlurred ? 'blur-lg brightness-50' : ''}
          transition-all duration-300
        `}
        onMouseMove={() => { lastActivity.current = Date.now(); }}
        onClick={() => { lastActivity.current = Date.now(); }}
      >
        {children}
      </div>

      {/* –û–≤–µ—Ä–ª–µ–π –ø—Ä–∏ —Ä–∞–∑–º—ã—Ç–∏–∏ */}
      {isBlurred && (
        <div className="fixed inset-0 bg-black/30 flex items-center justify-center z-40 backdrop-blur-sm">
          <div className="text-white text-center p-8">
            <div className="text-6xl mb-4">üîí</div>
            <h2 className="text-2xl font-bold mb-2">–ö–æ–Ω—Ç–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ —Å–∫—Ä—ã—Ç</h2>
            <p className="text-lg opacity-80">–ù–∞–∂–º–∏—Ç–µ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è</p>
          </div>
        </div>
      )}
    </div>
  );
}

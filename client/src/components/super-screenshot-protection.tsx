import { useEffect, useState, useCallback, useRef } from 'react';
import { useToast } from '@/hooks/use-toast';
import { SystemScreenshotMonitor } from '@/lib/system-screenshot-monitor';

interface SuperScreenshotProtectionProps {
  children: React.ReactNode;
  enabled?: boolean;
  showWarnings?: boolean;
}

export default function SuperScreenshotProtection({ 
  children, 
  enabled = true, 
  showWarnings = true 
}: SuperScreenshotProtectionProps) {
  const { toast } = useToast();
  const [isBlurred, setIsBlurred] = useState(false);
  const [watermarkText, setWatermarkText] = useState('');
  const [contentShift, setContentShift] = useState({ x: 0, y: 0 });
  const alertShown = useRef(false);
  const protectionLevel = useRef(0);
  const contentRef = useRef<HTMLDivElement>(null);
  const systemMonitor = useRef<SystemScreenshotMonitor>();

  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π watermark
  useEffect(() => {
    if (!enabled) return;
    
    const user = localStorage.getItem('username') || '–ê–Ω–æ–Ω–∏–º–Ω—ã–π';
    const sessionId = Math.random().toString(36).substring(2, 8);
    const ip = Math.random().toString(36).substring(2, 10);
    
    const updateWatermark = () => {
      const timestamp = new Date().toLocaleString('ru-RU');
      const seconds = new Date().getSeconds();
      setWatermarkText(`üö´ –ö–û–ù–§–ò–î–ï–ù–¶–ò–ê–õ–¨–ù–û ‚Ä¢ ${user} ‚Ä¢ ${timestamp} ‚Ä¢ IP: ${ip} ‚Ä¢ ID: ${sessionId} ‚Ä¢ ‚è±Ô∏è${seconds}`);
    };

    updateWatermark();
    const watermarkInterval = setInterval(updateWatermark, 1000);

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä
    systemMonitor.current = new SystemScreenshotMonitor({
      onSuspiciousActivity: (reason: string, level: number) => {
        console.warn(`üõ°Ô∏è –°–∏—Å—Ç–µ–º–Ω–∞—è –∑–∞—â–∏—Ç–∞: ${reason}, —É—Ä–æ–≤–µ–Ω—å: ${level}`);
        
        if (level > 5) {
          setIsBlurred(true);
          setTimeout(() => setIsBlurred(false), 3000);
          
          toast({
            title: "üö® –°–∏—Å—Ç–µ–º–Ω–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ",
            description: `–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${reason}`,
            variant: "destructive",
            duration: 5000,
          });
        }
      },
      onHighRisk: () => {
        // –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–≤–µ–Ω—å - –±–ª–æ–∫–∏—Ä—É–µ–º –ø–æ–ª–Ω–æ—Å—Ç—å—é
        document.body.style.filter = 'blur(30px) grayscale(100%)';
        document.body.style.pointerEvents = 'none';
        
        toast({
          title: "üîí –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ù–ê–†–£–®–ï–ù–ò–ï",
          description: "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤. –°–µ—Å—Å–∏—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞.",
          variant: "destructive",
          duration: 10000,
        });

        // –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
          document.body.style.filter = '';
          document.body.style.pointerEvents = '';
        }, 30000);
      }
    });

    systemMonitor.current.activate();

    return () => {
      clearInterval(watermarkInterval);
      if (systemMonitor.current) {
        systemMonitor.current.destroy();
      }
    };
  }, [enabled, toast]);

  // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ —Å–º–µ—â–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
  useEffect(() => {
    if (!enabled) return;

    const shiftContent = () => {
      const x = (Math.random() - 0.5) * 4; // -2px to 2px
      const y = (Math.random() - 0.5) * 4;
      setContentShift({ x, y });
    };

    const shiftInterval = setInterval(shiftContent, 3000);
    return () => clearInterval(shiftInterval);
  }, [enabled]);

  // –î–µ—Ç–µ–∫—Ü–∏—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ —á–µ—Ä–µ–∑ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã
  useEffect(() => {
    if (!enabled) return;

    let suspicionLevel = 0;
    let lastWindowSize = { width: window.innerWidth, height: window.innerHeight };
    let lastFocusTime = Date.now();
    
    // 1. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞ (DevTools)
    const handleResize = () => {
      const newSize = { width: window.innerWidth, height: window.innerHeight };
      const sizeDiff = Math.abs(newSize.width - lastWindowSize.width) + 
                      Math.abs(newSize.height - lastWindowSize.height);
      
      if (sizeDiff > 100) {
        suspicionLevel += 2;
        triggerProtection('–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞');
      }
      lastWindowSize = newSize;
    };

    // 2. –î–µ—Ç–µ–∫—Ü–∏—è –ø–æ—Ç–µ—Ä–∏ —Ñ–æ–∫—É—Å–∞ (–ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –¥—Ä—É–≥–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ)
    const handleVisibilityChange = () => {
      if (document.hidden) {
        const timeAway = Date.now() - lastFocusTime;
        if (timeAway < 1000) { // –ë—ã—Å—Ç—Ä–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ
          suspicionLevel += 3;
          triggerProtection('–ë—ã—Å—Ç—Ä–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π');
        }
      } else {
        lastFocusTime = Date.now();
      }
    };

    // 3. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –º—ã—à–∏ (–ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Å–∫—Ä–∏–Ω—à–æ—Ç—É)
    const handleMouseMove = (e: MouseEvent) => {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ –∫ –∫—Ä–∞—è–º —ç–∫—Ä–∞–Ω–∞ (–≥–¥–µ –æ–±—ã—á–Ω–æ –∫–Ω–æ–ø–∫–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞)
      const { clientX, clientY } = e;
      const { innerWidth, innerHeight } = window;
      
      if (clientX < 50 || clientX > innerWidth - 50 || 
          clientY < 50 || clientY > innerHeight - 50) {
        suspicionLevel += 0.5;
      }
      
      // –°–±—Ä–æ—Å –ø–æ–¥–æ–∑—Ä–µ–Ω–∏—è –ø—Ä–∏ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
      if (suspicionLevel > 0) {
        suspicionLevel = Math.max(0, suspicionLevel - 0.1);
      }
    };

    // 4. –î–µ—Ç–µ–∫—Ü–∏—è –∫–æ–º–±–∏–Ω–∞—Ü–∏–π –∫–ª–∞–≤–∏—à
    const handleKeyDown = (e: KeyboardEvent) => {
      const suspiciousKeys = [
        'PrintScreen',
        e.key === 'F12',
        e.ctrlKey && e.shiftKey && e.key === 'I',
        e.ctrlKey && e.shiftKey && e.key === 'S',
        e.metaKey && e.shiftKey && ['3', '4', '5'].includes(e.key),
        e.altKey && e.key === 'Tab'
      ];

      if (suspiciousKeys.some(Boolean)) {
        e.preventDefault();
        e.stopPropagation();
        suspicionLevel += 5;
        triggerProtection(`–ö–ª–∞–≤–∏—à–∞: ${e.key}`);
        return false;
      }
    };

    // 5. –î–µ—Ç–µ–∫—Ü–∏—è –ø—Ä–∞–≤–æ–≥–æ –∫–ª–∏–∫–∞
    const handleRightClick = (e: MouseEvent) => {
      e.preventDefault();
      suspicionLevel += 2;
      triggerProtection('–ü—Ä–∞–≤—ã–π –∫–ª–∏–∫');
      return false;
    };

    // 6. –î–µ—Ç–µ–∫—Ü–∏—è drag & drop (—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π)
    const handleDragStart = (e: DragEvent) => {
      e.preventDefault();
      suspicionLevel += 3;
      triggerProtection('–ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è');
      return false;
    };

    // 7. –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –≤—ã–¥–µ–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
    const handleSelection = () => {
      if (window.getSelection) {
        window.getSelection()?.removeAllRanges();
      }
    };

    const triggerProtection = (reason: string) => {
      console.warn(`üõ°Ô∏è –ó–∞—â–∏—Ç–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞: ${reason}, —É—Ä–æ–≤–µ–Ω—å: ${suspicionLevel}`);
      
      // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —É—Ä–æ–≤–µ–Ω—å –∑–∞—â–∏—Ç—ã
      protectionLevel.current = Math.min(10, protectionLevel.current + 1);
      
      // –†–∞–∑–º—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
      setIsBlurred(true);
      setTimeout(() => setIsBlurred(false), 2000 + protectionLevel.current * 500);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
      if (showWarnings && !alertShown.current) {
        toast({
          title: "üö® –ù–∞—Ä—É—à–µ–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
          description: `–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø–æ–ø—ã—Ç–∫–∞: ${reason}. –í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è.`,
          variant: "destructive",
          duration: 5000,
        });
        alertShown.current = true;
        setTimeout(() => { alertShown.current = false; }, 3000);
      }

      // –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–≤–µ–Ω—å - –ø–æ–ª–Ω–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞
      if (suspicionLevel > 10) {
        document.body.style.filter = 'blur(20px)';
        setTimeout(() => {
          document.body.style.filter = '';
          suspicionLevel = 0;
        }, 10000);
      }
    };

    // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª–∏
    window.addEventListener('resize', handleResize);
    document.addEventListener('visibilitychange', handleVisibilityChange);
    document.addEventListener('mousemove', handleMouseMove);
    document.addEventListener('keydown', handleKeyDown);
    document.addEventListener('contextmenu', handleRightClick);
    document.addEventListener('dragstart', handleDragStart);
    document.addEventListener('selectstart', handleSelection);

    // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    const suspicionInterval = setInterval(() => {
      if (suspicionLevel > 5) {
        triggerProtection('–í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏');
      }
    }, 5000);

    return () => {
      window.removeEventListener('resize', handleResize);
      document.removeEventListener('visibilitychange', handleVisibilityChange);
      document.removeEventListener('mousemove', handleMouseMove);
      document.removeEventListener('keydown', handleKeyDown);
      document.removeEventListener('contextmenu', handleRightClick);
      document.removeEventListener('dragstart', handleDragStart);
      document.removeEventListener('selectstart', handleSelection);
      clearInterval(suspicionInterval);
    };
  }, [enabled, showWarnings, toast]);

  if (!enabled) {
    return <>{children}</>;
  }

  return (
    <>
      {/* –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ watermark —Å–ª–æ–∏ */}
      <div className="fixed inset-0 pointer-events-none z-50 overflow-hidden">
        {/* –ì–ª–∞–≤–Ω—ã–π watermark */}
        <div 
          className="absolute inset-0 flex items-center justify-center text-red-500/30 text-sm font-bold transform rotate-45"
          style={{
            background: `repeating-linear-gradient(
              45deg,
              transparent,
              transparent 100px,
              rgba(239, 68, 68, 0.1) 100px,
              rgba(239, 68, 68, 0.1) 120px
            )`
          }}
        >
          <div className="text-center whitespace-pre-line leading-8">
            {watermarkText}
          </div>
        </div>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ watermark –ø–æ —É–≥–ª–∞–º */}
        {[
          { className: "top-4 left-4", rotate: "0deg" },
          { className: "top-4 right-4", rotate: "0deg" },
          { className: "bottom-4 left-4", rotate: "0deg" },
          { className: "bottom-4 right-4", rotate: "0deg" },
          { className: "top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2", rotate: "-45deg" }
        ].map((pos, i) => (
          <div 
            key={i}
            className={`absolute ${pos.className} text-red-500/40 text-xs font-bold`}
            style={{ transform: `rotate(${pos.rotate})` }}
          >
            üö´ –ó–ê–ü–ò–°–¨ –í–ï–î–ï–¢–°–Ø üö´
          </div>
        ))}

        {/* –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –ø–æ–º–µ—Ö–∏ */}
        <div className="absolute inset-0 opacity-20">
          {Array.from({length: 20}, (_, i) => (
            <div
              key={i}
              className="absolute w-1 h-1 bg-red-500 animate-pulse"
              style={{
                left: `${Math.random() * 100}%`,
                top: `${Math.random() * 100}%`,
                animationDelay: `${Math.random() * 2}s`
              }}
            />
          ))}
        </div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å –∑–∞—â–∏—Ç–æ–π */}
      <div
        ref={contentRef}
        className={`
          relative transition-all duration-300
          ${isBlurred ? 'blur-lg brightness-50' : ''}
          super-anti-screenshot super-flicker-protection super-protected-content
        `}
        style={{
          transform: `translate(${contentShift.x}px, ${contentShift.y}px)`,
          userSelect: 'none',
          WebkitUserSelect: 'none',
          MozUserSelect: 'none',
          msUserSelect: 'none',
        }}
      >
        {children}
      </div>

      {/* CSS-—Å—Ç–∏–ª–∏ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞—â–∏—Ç—ã */}
      <style dangerouslySetInnerHTML={{
        __html: `
          .anti-screenshot-content {
            -webkit-touch-callout: none !important;
            -webkit-user-select: none !important;
            -khtml-user-select: none !important;
            -moz-user-select: none !important;
            -ms-user-select: none !important;
            user-select: none !important;
            -webkit-app-region: no-drag;
            -webkit-highlight: none;
            -webkit-tap-highlight-color: transparent;
          }
          
          .anti-screenshot-content::before {
            content: "";
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: repeating-linear-gradient(
              90deg,
              transparent,
              transparent 50px,
              rgba(255, 0, 0, 0.02) 50px,
              rgba(255, 0, 0, 0.02) 51px
            );
            pointer-events: none;
            z-index: 999;
            mix-blend-mode: difference;
          }

          @media print {
            body * { 
              visibility: hidden !important; 
              background: black !important;
              color: transparent !important;
            }
            body::after {
              content: "–ü–ï–ß–ê–¢–¨ –ó–ê–ü–†–ï–©–ï–ù–ê - –ö–û–ù–§–ò–î–ï–ù–¶–ò–ê–õ–¨–ù–´–ô –ú–ê–¢–ï–†–ò–ê–õ" !important;
              position: fixed !important;
              top: 50% !important;
              left: 50% !important;
              transform: translate(-50%, -50%) !important;
              font-size: 48px !important;
              color: red !important;
              visibility: visible !important;
              z-index: 9999 !important;
            }
          }

          @keyframes flicker {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.8; }
          }
          
          .anti-screenshot-content {
            animation: flicker 3s infinite;
          }
        `
      }} />
    </>
  );
}

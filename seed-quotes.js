import 'dotenv/config';
import pg from 'pg';

const client = new pg.Client({
  connectionString: process.env.DATABASE_URL,
});

const sampleQuotes = [
  // –û–∫—Ç—è–±—Ä—å (–º–µ—Å—è—Ü 10)
  { text: "–ë—ñ–ª—ñ–º - ”©–º—ñ—Ä –±–∞“õ—ã—Ç—ã–Ω—ã“£ –∫—ñ–ª—Ç—ñ", author: "–ê–±–∞–π “ö“±–Ω–∞–Ω–±–∞–µ–≤", month: 10 },
  { text: "–û“õ—É - –∫”©–∑—Å—ñ–∑ –∞–¥–∞–º“ì–∞ —Ç–∞—è“õ, –±—ñ–ª—ñ–º—Å—ñ–∑ –∞–¥–∞–º“ì–∞ –∂–æ–ª", author: "“ö–∞–∑–∞“õ –º–∞“õ–∞–ª—ã", month: 10 },
  { text: "“í—ã–ª—ã–º “Ø–π—Ä–µ–Ω–±–µ–∫ –∫–µ—Ä–µ–∫, “ì—ã–ª—ã–º—Å—ã–∑ –±—ñ–ª—ñ–º –∂–æ“õ", author: "–ê–±–∞–π “ö“±–Ω–∞–Ω–±–∞–µ–≤", month: 10 },
  { text: "”®–∑ —Ö–∞–ª“õ—ã–Ω—ã“£ –Ω–∞–º—ã—Å—ã–Ω ”©–∑—ñ “õ–æ—Ä“ì–∞–π—Ç—ã–Ω “±—Ä–ø–∞“õ –∫–µ—Ä–µ–∫", author: "–ú“±—Ö—Ç–∞—Ä ”ò—É–µ–∑–æ–≤", month: 10 },
  { text: "–ï“£–±–µ–∫ –µ—Ç—Å–µ“£ –µ—Ä—ñ–Ω–±–µ–π, —Ç–æ—è–¥—ã “õ–∞—Ä–Ω—ã“£ —Ç—ñ–ª–µ–Ω–±–µ–π", author: "“ö–∞–∑–∞“õ –º–∞“õ–∞–ª—ã", month: 10 },
  
  // –ù–æ—è–±—Ä—å (–º–µ—Å—è—Ü 11)
  { text: "–ê–¥–∞–ª –µ“£–±–µ–∫ –∞–¥–∞–º–¥—ã –∞—Å“õ–∞“õ—Ç–∞—Ç–∞–¥—ã", author: "“ö–∞–∑–∞“õ –º–∞“õ–∞–ª—ã", month: 11 },
  { text: "–ë—ñ–ª—ñ–º–¥—ñ –º—ã“õ—Ç—ã “±—Å—Ç–∞“ì–∞–Ω –∞–¥–∞–º –±–∞“õ—ã—Ç“õ–∞ –∂–µ—Ç–µ–¥—ñ", author: "”ò–ª-–§–∞—Ä–∞–±–∏", month: 11 },
  { text: "“∞—Å—Ç–∞–∑—ã“£–¥—ã “õ“±—Ä–º–µ—Ç—Ç–µ, –±—ñ–ª—ñ–º–¥—ñ –±–∞“ì–∞–ª–∞", author: "“ö–∞–∑–∞“õ –º–∞“õ–∞–ª—ã", month: 11 },
];

async function seedQuotes() {
  try {
    await client.connect();
    console.log('üì¶ Connected to database');
    
    for (const quote of sampleQuotes) {
      await client.query(
        'INSERT INTO quotes (text, author, month, "order") VALUES ($1, $2, $3, 0)',
        [quote.text, quote.author, quote.month]
      );
    }
    
    console.log(`‚úÖ Added ${sampleQuotes.length} sample quotes`);
    console.log('üìä Quotes distribution:');
    console.log('   - –û–∫—Ç—è–±—Ä—å: 5 —Ü–∏—Ç–∞—Ç');
    console.log('   - –ù–æ—è–±—Ä—å: 3 —Ü–∏—Ç–∞—Ç—ã');
  } catch (error) {
    console.error('‚ùå Error seeding quotes:', error);
    process.exit(1);
  } finally {
    await client.end();
  }
}

seedQuotes();

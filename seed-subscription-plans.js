import 'dotenv/config';
import { db } from './server/db.ts';
import { subscriptionPlans } from './shared/schema.ts';

const plans = [
  {
    name: '1 —Ç–µ—Å—Ç',
    description: '–û–¥–Ω–∞ –ø–æ–ø—ã—Ç–∫–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∞',
    price: 50000, // 500 —Ç–µ–Ω–≥–µ –≤ –∫–æ–ø–µ–π–∫–∞—Ö
    currency: 'KZT',
    durationDays: 1,
    features: ['single_test', 'basic_results'],
    isActive: true, 
    sortOrder: 1
  },
  {
    name: '–§–∏–∑–º–∞—Ç –Ω–∞ –º–µ—Å—è—Ü',
    description: '–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –±–ª–æ–∫—É –§–∏–∑–∏–∫–æ-–º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –º–µ—Å—è—Ü',
    price: 100000, // 1000 —Ç–µ–Ω–≥–µ –≤ –∫–æ–ø–µ–π–∫–∞—Ö
    currency: 'KZT',
    durationDays: 30,
    features: ['physics_math_block', 'unlimited_tests', 'progress_tracking', 'detailed_results'],
    isActive: true,
    sortOrder: 2
  }
];

async function seedPlans() {
  try {
    console.log('üå± –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã...');
    
    for (const plan of plans) {
      await db.insert(subscriptionPlans)
        .values(plan)
        .onConflictDoNothing();
      console.log(`‚úÖ –ü–ª–∞–Ω "${plan.name}" –¥–æ–±–∞–≤–ª–µ–Ω`);
    }
    
    console.log('üéâ –í—Å–µ —Ç–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!');
    process.exit(0);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø–ª–∞–Ω–æ–≤:', error);
    process.exit(1);
  }
}

seedPlans();